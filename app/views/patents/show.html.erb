
<h1> this is the detail lookup page </h1> <br><br>
<li><%= link_to "繼續查下一筆", new_patent_path %></li>   <li><%= link_to "去歷史查詢列表", patents_path %> </li>
<li><%= link_to "編輯這一筆查詢，調整fetch的格子數" , edit_patent_path %></li> 
<table>
	<tr> 
		<td> 申請號 </td> <td><%= @patent.apply_no %></td>
	</tr>
	<tr>
		<td>專利範圍</td> <td> </td>
	</tr>
</table>
 <% relationship_parent %>
<ul class ="users"> 
<% @patent_scopy_by_item.each do |scope_item| %>
  <li>
  <%= scope_item  %> 
</li>
<% end %>

<hr>
<table class='table-bordered'>
<tr>
	<td> 第一欄位 </td>
	<td> sub 專利範圍 </td>
</tr>
	<% @patent_scopy_by_item.each do |item| %>
	<tr class="<%= column_color(item) %>">
		<td class='<%= column_color(item) %>'><font color='<%= column_color(item) %>'><%= left_slice(item)  %></td>
		<td><%= right_slice(item) %></td>
	</tr>
	<% end %>
</table>
<hr>
  <% relationship %>
  <%#  binding.pry %> 
<div class="row">
  <div class="col-md-4">

<table class='table-bordered'>
<tr>
  <td>請求項編號 </td>
  <td>此項目下，子附屬項編號LIST </td>
</tr>
<tr>
  <% @h.each do |key,value| %> 
  <td><%= key %> </td>
  <td><%= value.join(",") %></td>
</tr>
  <% end %> 
</table> 
</div>
<div class="col-md-2">  
<table class='table-bordered'>
<tr>
  <td>請求項編號 </td>
  <td>Parent Node No. </td>
  
</tr>
<tr>
  <% @parent.each do |key,value| %> 
  <td><%= key %> </td>
  <td><%= value.join("") %></td>
</tr>
  <% end %>
</table> 
 
  
</div>
<div class="col-md-2">
   <table class='table-bordered'>
    <tr>
      <td> 請求項編號  </td>
    <td>與前面項目，第一次重複的編號 </td>
    </tr>
    <tr>
      <% @repeat_no.from(1).each_with_index do |repeat_no , index| %> 
      <% if index+1 !=repeat_no && repeat_no != 1 %> 
      <td><%= index+1 %> </td>
      <td><%= repeat_no %></td>
       </tr> 
       <% end %>
      <% end %> 
  </table> 
</div>
<div class="col-md-4">
</div>
</ul> 

<br> 
    <div>
      <hr>
      <% @show_index = @parent.select {|k,v| v.empty? } %>
      <% @show_index.keys.each do |root| %> 
      <%= build_tree(root.to_s, @h) %>
      <br>
      <br>
      <% end %>
      
      <%# build_entire_tree(@h.keys[0].to_s, @h) %>
    </div>
<br>
<hr>
    <script>  
      
    var width = 500,  
    height = 500;  
      
    var tree = d3.layout.tree()  
        .size([width, height-200])  
        .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });  
      
    var diagonal = d3.svg.diagonal()  
        .projection(function(d) { return [d.y, d.x]; });  
      
    var svg = d3.select("body").append("svg")  
        .attr("width", width)  
        .attr("height", height)  
        .append("g")  
        .attr("transform", "translate(40,0)");  
           
  d3.json("http://dan-first-108350.apne1.nitrousbox.com/patents/101107780-5cbdc2ef-b4ca-4289-8d72-d6cb4eae4bc3/json_tree.json", function(error, root) {  
      
        var nodes = tree.nodes(root);  
        var links = tree.links(nodes);  
          
        console.log(nodes);  
        console.log(links);  
          
        var link = svg.selectAll(".link")  
          .data(links)  
          .enter()  
          .append("path")  
          .attr("class", "link")  
          .attr("d", diagonal);  
          
        var node = svg.selectAll(".node")  
          .data(nodes)  
          .enter()  
          .append("g")  
          .attr("class", "node")  
          .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })  
          
        node.append("circle")  
          .attr("r", 4.5);  
          
        node.append("text")  
          .attr("dx", function(d) { return d.children ? -8 : 8; })  
          .attr("dy", 3)  
          .style("text-anchor", function(d) { return d.children ? "end" : "start"; })  
          .text(function(d) { return d.name; });  
        });  
      
    </script>  
 
 
